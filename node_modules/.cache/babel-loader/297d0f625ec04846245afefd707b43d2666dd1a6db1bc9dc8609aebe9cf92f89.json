{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\JudgeYourCharacterReactFull\\\\JudgeYourCharacterFullApp\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\nimport LandingPage from \"./pages/LandingPage\";\nimport QuestionPage from \"./components/QuestionPage\";\nimport ResultPage from \"./components/ResultPage\";\nimport questions from \"./data/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppContent() {\n  _s();\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const navigate = useNavigate();\n  const handleAnswer = trait => {\n    const newAnswers = [...answers, trait];\n    setAnswers(newAnswers);\n    if (currentQuestion < questions.length - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setTimeout(() => {\n        navigate(\"/result\");\n      }, 300);\n    }\n  };\n  const handleRestart = () => {\n    setCurrentQuestion(0);\n    setAnswers([]);\n    setUserName(\"\");\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(LandingPage, {\n        setUserName: setUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/quiz\",\n      element: /*#__PURE__*/_jsxDEV(QuestionPage, {\n        question: questions[currentQuestion],\n        onAnswer: handleAnswer,\n        current: currentQuestion + 1,\n        total: questions.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/result\",\n      element: /*#__PURE__*/_jsxDEV(ResultPage, {\n        answers: answers,\n        onRestart: handleRestart,\n        userName: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(AppContent, \"Sdnojh0jBDI2tsrdSuehbm2ufRY=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContent;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","useNavigate","LandingPage","QuestionPage","ResultPage","questions","jsxDEV","_jsxDEV","AppContent","_s","currentQuestion","setCurrentQuestion","answers","setAnswers","userName","setUserName","navigate","handleAnswer","trait","newAnswers","length","setTimeout","handleRestart","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","question","onAnswer","current","total","onRestart","_c","App","_c2","$RefreshReg$"],"sources":["D:/downloads/JudgeYourCharacterReactFull/JudgeYourCharacterFullApp/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport LandingPage from \"./pages/LandingPage\";\r\nimport QuestionPage from \"./components/QuestionPage\";\r\nimport ResultPage from \"./components/ResultPage\";\r\nimport questions from \"./data/questions\";\r\n\r\nfunction AppContent() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleAnswer = (trait) => {\r\n    const newAnswers = [...answers, trait];\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      setTimeout(() => {\r\n        navigate(\"/result\");\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  const handleRestart = () => {\r\n    setCurrentQuestion(0);\r\n    setAnswers([]);\r\n    setUserName(\"\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/\" element={<LandingPage setUserName={setUserName} />} />\r\n      <Route\r\n        path=\"/quiz\"\r\n        element={\r\n          <QuestionPage\r\n            question={questions[currentQuestion]}\r\n            onAnswer={handleAnswer}\r\n            current={currentQuestion + 1}\r\n            total={questions.length}\r\n          />\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/result\"\r\n        element={\r\n          <ResultPage\r\n            answers={answers}\r\n            onRestart={handleRestart}\r\n            userName={userName}\r\n          />\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <AppContent />\r\n    </Router>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}